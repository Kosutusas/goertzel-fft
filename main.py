import os
import time
import traceback

import numpy
import matplotlib.pylab as plt

import cbplot
import fileio
from alg import dsp


def main(pltfig, cb_plt=None):
    fs = 1000
    data_dir = os.getcwd()
    filepath = os.path.join(data_dir, 'data', 'sig_60Hz.csv')
    dname = filepath.split('\\')[-1]
    
    sig = fileio.csvtosig(filepath)
    
    ft = numpy.array([50, 60], dtype='float')   # Target frequency
    filter_width = 1*fs     # 1 sec
    
    # short-time Goertzel algorithm
    st = time.time()
    res_stgo = dsp.shorttime_goertzel_m(sig, fs, ft, filter_width)
    print('Goertzel-st-m: {0} secs'.format(time.time()-st))
    print('mag50: {0}'.format(res_stgo[0]))
    print('mag60: {0}'.format(res_stgo[1]))
    
    # short-time FFT
    st = time.time()
    res_stft = dsp.fftalg(sig, fs, ft, filter_width, 
                          method='stft', cb_plt=cb_plt)
    print('FFT-st: {0} secs'.format(time.time()-st))
    print('mag50: {0}'.format(res_stft[0]))
    print('mag60: {0}'.format(res_stft[1]))
    
    if pltfig:
        plt.plot(sig)
        plt.title('file:{0}'.format(dname))
        plt.show()


if __name__ == '__main__':
    try:
        # 1. To get precise runtime of algorithm, please set cb_plt as `None`
        # 2. To see spectrum generated by fft, please set cb_plt as 
        #    `cbplot.plt_spectrum`
        main(pltfig=False, cb_plt=cbplot.plt_spectrum)
    except Exception as ex:
        print(ex.message)
        traceback.print_exc()
